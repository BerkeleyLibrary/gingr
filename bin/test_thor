# frozen_string_literal: true

require 'thor'
require_relative '../lib/data_handler'
require_relative '../lib/solr_indexer'
require_relative '../lib/geoserver_publisher'
require 'find'
require 'json'

# test
module Gingr
  # comments
  class TestThor < Thor
    desc 'hello NAME', 'say hello to NAME'
    option :color
    def hello(name)
      color = options[:color]
      puts "Hello #{name} - #{color}"
      done = good_morning(name)
      puts(done)
    end

    desc 'good morning NAME', 'say good morning to NAME'
    option :color
    def good_morning(name)
      color = options[:color]
      puts "Good morning #{name} -- #{color}"
      'done'
    end

    desc 'unpack zip file to a directory', 'unpack a zip file to a directory'
    option :spatial_root
    option :geoserver_root
    def unpack(zipfile)
      DataHandler.spatial_root = options[:spatial_root] || ENV['SPATIAL_ROOT']
      DataHandler.geoserver_root = options[:geoserver_root] || ENV['GEOSERVER_ROOT']

      temp_path = File.join(Dir.pwd, 'temp', File.basename(zipfile, '.*'))
      DataHandler.extract_zipfile(zipfile, temp_path)

      ingestion_directory = File.join(temp_path, Config.ingestion_dirname)
      # puts ingestion_directory
      ls = DataHandler.subdirectory_paths(ingestion_directory)
      # puts ls
      ls.each do |dir|
        # puts dir
        DataHandler.move_ingestion_files(dir)
      end
    end

    def self.exit_on_failure?
      true
    end
  end
end

Gingr::TestThor.start(ARGV)
