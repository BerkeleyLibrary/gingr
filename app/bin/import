# frozen_string_literal: true

require 'thor'
require_relative '../lib/solr_publish'
require 'find'

module Gingr
  class Import < Thor
    desc 'Index json files to solr', 'Index json files from a directory to solr'
    option :solr_url
    option :update_domain, type: :boolean, default: false
    def solr(dir_path)
      solr_url = options[:solr_url] || ENV['SOLR_URL']
      indexer = Indexer.new(solr_url)
      Find.find(dir_path) do |path|
        next unless File.extname(path).downcase == '.json'

        indexer.update(path, options[:update_domain])
      rescue RSolr::Error::Http => e
        puts e
      end
      indexer.solr.commit
    end

    desc 'hello NAME', 'say hello to NAME'
    option :from
    def geoserver(name)
      puts "from: #{options[:from]}" if options[:from]
      puts "Hello #{name}"
    end

    desc 'hello NAME', 'say hello to NAME'
    option :from
    def sourc_file(name)
      puts "from: #{options[:from]}" if options[:from]
      puts "Hello #{name}"
    end

    desc 'hello NAME', 'say hello to NAME'
    option :from
    def all(name)
      puts "from: #{options[:from]}" if options[:from]
      puts "Hello #{name}"
    end

    def self.exit_on_failure?
      true
    end
  end
end

Gingr::Import.start(ARGV)
